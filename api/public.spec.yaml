openapi: 3.0.0
info:
  title: API
  version: 0.0.1
servers:
  - url: '{env}/api/v1'
    variables:
      env:
        default: http://localhost:8080
        enum:
          - http://localhost:8080
paths:
  /articles:
    get:
      operationId: getArticles
      responses:
        '200': {$ref: '#/components/responses/GetArticles'}
        '500': {$ref: '#/components/responses/ErrorMsg'}
  /articles/{articleId}:
    get:
      operationId: getArticle
      parameters:
        - $ref: '#/components/parameters/articleId'
      responses:
        '200': {$ref: '#/components/responses/GetArticle'}
        '404': {$ref: '#/components/responses/ErrorMsg'}
        '500': {$ref: '#/components/responses/ErrorMsg'}
components:
  parameters:
    articleId:
      name: articleId
      in: path
      required: true
      schema:
        type: integer
        format: int64
        x-go-type: int
  responses:
    ErrorMsg:
      description: Error message
      content:
        application/json:
          schema:
            type: object
            properties:
              error: {type: string}
            required: [error]
    GetArticles:
      description: List of articles
      content:
        application/json:
          schema:
            type: object
            properties:
              data: {$ref: '#/components/schemas/Articles'}
            required: [data]
    GetArticle:
      description: Article
      content:
        application/json:
          schema:
            type: object
            properties:
              data: {$ref: '#/components/schemas/Article'}
            required: [data]
  schemas:
    ErrorMsg:
      type: object
      properties:
        error: {type: string}
      required: [error]
    Article:
      type: object
      properties:
        id: {type: number, format: int64, x-go-type: int}
        title: {type: string}
        body: {type: string}
        description: {type: string}
        tags: {type: array, items: {type: string}}
        author: {type: string}
        createdAt: {type: string, format: date-time}
        updatedAt: {type: string, format: date-time}
      required: [id, title, body, tags, author, description, createdAt, updatedAt]
    Articles:
      type: array
      items: {$ref: '#/components/schemas/Article'}
  securitySchemes: {}
security: []
